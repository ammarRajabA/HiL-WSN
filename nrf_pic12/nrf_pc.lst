;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 4/11/2016 4:32:30 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2AB5      	GOTO       693
_SPI1_Read:
;__Lib_SPI_c345.c,56 :: 		
;__Lib_SPI_c345.c,57 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x0835      	MOVF       FARG_SPI1_Read_buffer, 0
0x0006	0x0093      	MOVWF      SSPBUF
;__Lib_SPI_c345.c,58 :: 		
L_SPI1_Read6:
0x0007	0x1683      	BSF        STATUS, 5
0x0008	0x1814      	BTFSC      SSPSTAT, 0
0x0009	0x280C      	GOTO       L_SPI1_Read7
;__Lib_SPI_c345.c,59 :: 		
0x000A	0x0000      	NOP
0x000B	0x2807      	GOTO       L_SPI1_Read6
L_SPI1_Read7:
;__Lib_SPI_c345.c,60 :: 		
0x000C	0x1283      	BCF        STATUS, 5
0x000D	0x0813      	MOVF       SSPBUF, 0
0x000E	0x00F0      	MOVWF      R0
;__Lib_SPI_c345.c,63 :: 		
L_end_SPI1_Read:
0x000F	0x0008      	RETURN
; end of _SPI1_Read
_SPI1_Write:
;__Lib_SPI_c345.c,67 :: 		
;__Lib_SPI_c345.c,70 :: 		
0x0010	0x1283      	BCF        STATUS, 5
0x0011	0x1303      	BCF        STATUS, 6
0x0012	0x0835      	MOVF       FARG_SPI1_Write_data_, 0
0x0013	0x0093      	MOVWF      SSPBUF
;__Lib_SPI_c345.c,71 :: 		
L_SPI1_Write8:
0x0014	0x1683      	BSF        STATUS, 5
0x0015	0x1814      	BTFSC      SSPSTAT, 0
0x0016	0x2819      	GOTO       L_SPI1_Write9
;__Lib_SPI_c345.c,72 :: 		
0x0017	0x0000      	NOP
0x0018	0x2814      	GOTO       L_SPI1_Write8
L_SPI1_Write9:
;__Lib_SPI_c345.c,73 :: 		
0x0019	0x1283      	BCF        STATUS, 5
0x001A	0x0813      	MOVF       SSPBUF, 0
0x001B	0x00F0      	MOVWF      R0
;__Lib_SPI_c345.c,75 :: 		
L_end_SPI1_Write:
0x001C	0x0008      	RETURN
; end of _SPI1_Write
_toggle:
;nRF24L01_lib.c,37 :: 		void toggle(){
;nRF24L01_lib.c,38 :: 		CE_PIN=0;         //standbyI mode
0x001D	0x1283      	BCF        STATUS, 5
0x001E	0x1303      	BCF        STATUS, 6
0x001F	0x1107      	BCF        RC2_bit, BitPos(RC2_bit+0)
;nRF24L01_lib.c,39 :: 		delay_us(GLOBAL_DELAY*50);
0x0020	0x3022      	MOVLW      34
0x0021	0x00FC      	MOVWF      R12
0x0022	0x301C      	MOVLW      28
0x0023	0x00FD      	MOVWF      R13
L_toggle0:
0x0024	0x0BFD      	DECFSZ     R13, 1
0x0025	0x2824      	GOTO       L_toggle0
0x0026	0x0BFC      	DECFSZ     R12, 1
0x0027	0x2824      	GOTO       L_toggle0
0x0028	0x0000      	NOP
;nRF24L01_lib.c,40 :: 		CSN_PIN=1;
0x0029	0x1509      	BSF        RE2_bit, BitPos(RE2_bit+0)
;nRF24L01_lib.c,41 :: 		Delay_us(GLOBAL_DELAY*50);
0x002A	0x3022      	MOVLW      34
0x002B	0x00FC      	MOVWF      R12
0x002C	0x301C      	MOVLW      28
0x002D	0x00FD      	MOVWF      R13
L_toggle1:
0x002E	0x0BFD      	DECFSZ     R13, 1
0x002F	0x282E      	GOTO       L_toggle1
0x0030	0x0BFC      	DECFSZ     R12, 1
0x0031	0x282E      	GOTO       L_toggle1
0x0032	0x0000      	NOP
;nRF24L01_lib.c,42 :: 		CSN_PIN=0;
0x0033	0x1109      	BCF        RE2_bit, BitPos(RE2_bit+0)
;nRF24L01_lib.c,43 :: 		}
L_end_toggle:
0x0034	0x0008      	RETURN
; end of _toggle
_NRF_RW:
;nRF24L01_lib.c,60 :: 		unsigned char NRF_RW(unsigned char command,unsigned char dat){
;nRF24L01_lib.c,62 :: 		toggle();
0x0035	0x201D      	CALL       _toggle
;nRF24L01_lib.c,63 :: 		SPI1_Write(command);
0x0036	0x0833      	MOVF       FARG_NRF_RW_command, 0
0x0037	0x00B5      	MOVWF      FARG_SPI1_Write_data_
0x0038	0x2010      	CALL       _SPI1_Write
;nRF24L01_lib.c,64 :: 		delay_us(GLOBAL_DELAY*50);
0x0039	0x3022      	MOVLW      34
0x003A	0x00FC      	MOVWF      R12
0x003B	0x301C      	MOVLW      28
0x003C	0x00FD      	MOVWF      R13
L_NRF_RW4:
0x003D	0x0BFD      	DECFSZ     R13, 1
0x003E	0x283D      	GOTO       L_NRF_RW4
0x003F	0x0BFC      	DECFSZ     R12, 1
0x0040	0x283D      	GOTO       L_NRF_RW4
0x0041	0x0000      	NOP
;nRF24L01_lib.c,65 :: 		res=SPI1_Read(dat);
0x0042	0x0834      	MOVF       FARG_NRF_RW_dat, 0
0x0043	0x00B5      	MOVWF      FARG_SPI1_Read_buffer
0x0044	0x2003      	CALL       _SPI1_Read
;nRF24L01_lib.c,66 :: 		return res;
;nRF24L01_lib.c,67 :: 		}
L_end_NRF_RW:
0x0045	0x0008      	RETURN
; end of _NRF_RW
_UART1_Read:
;__Lib_UART_c67.c,21 :: 		
;__Lib_UART_c67.c,24 :: 		
0x0046	0x1283      	BCF        STATUS, 5
0x0047	0x1303      	BCF        STATUS, 6
0x0048	0x081A      	MOVF       RCREG, 0
0x0049	0x00F1      	MOVWF      R1
;__Lib_UART_c67.c,25 :: 		
0x004A	0x1C98      	BTFSS      RCSTA, 1
0x004B	0x284E      	GOTO       L_UART1_Read2
;__Lib_UART_c67.c,26 :: 		
0x004C	0x1218      	BCF        RCSTA, 4
;__Lib_UART_c67.c,27 :: 		
0x004D	0x1618      	BSF        RCSTA, 4
;__Lib_UART_c67.c,28 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,29 :: 		
0x004E	0x0871      	MOVF       R1, 0
0x004F	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Read:
0x0050	0x0008      	RETURN
; end of _UART1_Read
_UART1_Data_Ready:
;__Lib_UART_c67.c,16 :: 		
;__Lib_UART_c67.c,17 :: 		
0x0051	0x3000      	MOVLW      0
0x0052	0x1283      	BCF        STATUS, 5
0x0053	0x1303      	BCF        STATUS, 6
0x0054	0x1A8C      	BTFSC      PIR1, 5
0x0055	0x3001      	MOVLW      1
0x0056	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,18 :: 		
L_end_UART1_Data_Ready:
0x0057	0x0008      	RETURN
; end of _UART1_Data_Ready
_SPI1_Init:
;__Lib_SPI_c345.c,16 :: 		
;__Lib_SPI_c345.c,19 :: 		
0x0058	0x1683      	BSF        STATUS, 5
0x0059	0x1303      	BCF        STATUS, 6
0x005A	0x1287      	BCF        TRISC5_bit, BitPos(TRISC5_bit+0)
;__Lib_SPI_c345.c,20 :: 		
0x005B	0x1187      	BCF        TRISC3_bit, BitPos(TRISC3_bit+0)
;__Lib_SPI_c345.c,21 :: 		
0x005C	0x1607      	BSF        TRISC4_bit, BitPos(TRISC4_bit+0)
;__Lib_SPI_c345.c,23 :: 		
0x005D	0x1283      	BCF        STATUS, 5
0x005E	0x0194      	CLRF       SSPCON
;__Lib_SPI_c345.c,24 :: 		
0x005F	0x3040      	MOVLW      64
0x0060	0x1683      	BSF        STATUS, 5
0x0061	0x0094      	MOVWF      SSPSTAT
;__Lib_SPI_c345.c,25 :: 		
0x0062	0x1283      	BCF        STATUS, 5
0x0063	0x1694      	BSF        SSPCON, 5
;__Lib_SPI_c345.c,27 :: 		
L_end_SPI1_Init:
0x0064	0x0008      	RETURN
; end of _SPI1_Init
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0065	0x1283      	BCF        STATUS, 5
0x0066	0x1303      	BCF        STATUS, 6
0x0067	0x0822      	MOVF       ___DoICPAddr+1, 0
0x0068	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0069	0x0821      	MOVF       ___DoICPAddr, 0
0x006A	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x006B	0x0008      	RETURN
; end of _____DoICP
_merge:
;nRF24L01_lib.c,69 :: 		unsigned char merge(unsigned char target,unsigned char value,unsigned char shift,unsigned char mask){
;nRF24L01_lib.c,70 :: 		target&=mask;
0x006C	0x1283      	BCF        STATUS, 5
0x006D	0x1303      	BCF        STATUS, 6
0x006E	0x0832      	MOVF       FARG_merge_mask, 0
0x006F	0x052F      	ANDWF      FARG_merge_target, 0
0x0070	0x00F2      	MOVWF      R2
0x0071	0x0872      	MOVF       R2, 0
0x0072	0x00AF      	MOVWF      FARG_merge_target
;nRF24L01_lib.c,71 :: 		value=value<<shift;
0x0073	0x0831      	MOVF       FARG_merge_shift, 0
0x0074	0x00F1      	MOVWF      R1
0x0075	0x0830      	MOVF       FARG_merge_value, 0
0x0076	0x00F0      	MOVWF      R0
0x0077	0x0871      	MOVF       R1, 0
L__merge37:
0x0078	0x1903      	BTFSC      STATUS, 2
0x0079	0x287E      	GOTO       L__merge38
0x007A	0x0DF0      	RLF        R0, 1
0x007B	0x1070      	BCF        R0, 0
0x007C	0x3EFF      	ADDLW      255
0x007D	0x2878      	GOTO       L__merge37
L__merge38:
0x007E	0x0870      	MOVF       R0, 0
0x007F	0x00B0      	MOVWF      FARG_merge_value
;nRF24L01_lib.c,72 :: 		target|=value;
0x0080	0x0872      	MOVF       R2, 0
0x0081	0x04F0      	IORWF      R0, 1
0x0082	0x0870      	MOVF       R0, 0
0x0083	0x00AF      	MOVWF      FARG_merge_target
;nRF24L01_lib.c,73 :: 		return target;
;nRF24L01_lib.c,74 :: 		}
L_end_merge:
0x0084	0x0008      	RETURN
; end of _merge
_init_spi:
;nRF24L01_lib.c,26 :: 		void init_spi(){
;nRF24L01_lib.c,28 :: 		MISO_Dir=1;
0x0085	0x1683      	BSF        STATUS, 5
0x0086	0x1303      	BCF        STATUS, 6
0x0087	0x1607      	BSF        TRISC4_bit, BitPos(TRISC4_bit+0)
;nRF24L01_lib.c,29 :: 		MOSI_Dir=0;
0x0088	0x1287      	BCF        TRISC5_bit, BitPos(TRISC5_bit+0)
;nRF24L01_lib.c,30 :: 		CSN_Dir=0;
0x0089	0x1109      	BCF        TRISE2_bit, BitPos(TRISE2_bit+0)
;nRF24L01_lib.c,31 :: 		CE_Dir=0;
0x008A	0x1107      	BCF        TRISC2_bit, BitPos(TRISC2_bit+0)
;nRF24L01_lib.c,32 :: 		SCLK_Dir=0;
0x008B	0x1187      	BCF        TRISC3_bit, BitPos(TRISC3_bit+0)
;nRF24L01_lib.c,33 :: 		SPI1_Init();
0x008C	0x2058      	CALL       _SPI1_Init
;nRF24L01_lib.c,35 :: 		}
L_end_init_spi:
0x008D	0x0008      	RETURN
; end of _init_spi
_RX_set_static_payload:
;nRF24L01_lib.c,154 :: 		void RX_set_static_payload(char reg,char length){
;nRF24L01_lib.c,155 :: 		NRF_RW(reg | W_REGISTER,length);
0x008E	0x3020      	MOVLW      32
0x008F	0x1283      	BCF        STATUS, 5
0x0090	0x1303      	BCF        STATUS, 6
0x0091	0x042F      	IORWF      FARG_RX_set_static_payload_reg, 0
0x0092	0x00B3      	MOVWF      FARG_NRF_RW_command
0x0093	0x0830      	MOVF       FARG_RX_set_static_payload_length, 0
0x0094	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x0095	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,157 :: 		}
L_end_RX_set_static_payload:
0x0096	0x0008      	RETURN
; end of _RX_set_static_payload
_RX_mode:
;nRF24L01_lib.c,92 :: 		void RX_mode(){
;nRF24L01_lib.c,94 :: 		res=NRF_RW(CONFIG | R_REGISTER,NOP);
0x0097	0x1283      	BCF        STATUS, 5
0x0098	0x1303      	BCF        STATUS, 6
0x0099	0x01B3      	CLRF       FARG_NRF_RW_command
0x009A	0x30FF      	MOVLW      255
0x009B	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x009C	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,95 :: 		NRF_RW(CONFIG | W_REGISTER,res | 0b00000011);
0x009D	0x3020      	MOVLW      32
0x009E	0x00B3      	MOVWF      FARG_NRF_RW_command
0x009F	0x3003      	MOVLW      3
0x00A0	0x0470      	IORWF      R0, 0
0x00A1	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x00A2	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,96 :: 		delay_us(150);
0x00A3	0x3063      	MOVLW      99
0x00A4	0x00FD      	MOVWF      R13
L_RX_mode7:
0x00A5	0x0BFD      	DECFSZ     R13, 1
0x00A6	0x28A5      	GOTO       L_RX_mode7
0x00A7	0x0000      	NOP
0x00A8	0x0000      	NOP
;nRF24L01_lib.c,98 :: 		MODE='R';
0x00A9	0x3052      	MOVLW      82
0x00AA	0x00A0      	MOVWF      _MODE
;nRF24L01_lib.c,99 :: 		}
L_end_RX_mode:
0x00AB	0x0008      	RETURN
; end of _RX_mode
_toggle_CSN:
;nRF24L01_lib.c,45 :: 		void toggle_CSN(){
;nRF24L01_lib.c,46 :: 		delay_us(GLOBAL_DELAY*50);
0x00AC	0x3022      	MOVLW      34
0x00AD	0x1283      	BCF        STATUS, 5
0x00AE	0x1303      	BCF        STATUS, 6
0x00AF	0x00FC      	MOVWF      R12
0x00B0	0x301C      	MOVLW      28
0x00B1	0x00FD      	MOVWF      R13
L_toggle_CSN2:
0x00B2	0x0BFD      	DECFSZ     R13, 1
0x00B3	0x28B2      	GOTO       L_toggle_CSN2
0x00B4	0x0BFC      	DECFSZ     R12, 1
0x00B5	0x28B2      	GOTO       L_toggle_CSN2
0x00B6	0x0000      	NOP
;nRF24L01_lib.c,47 :: 		CSN_PIN=1;
0x00B7	0x1509      	BSF        RE2_bit, BitPos(RE2_bit+0)
;nRF24L01_lib.c,48 :: 		Delay_us(GLOBAL_DELAY*50);
0x00B8	0x3022      	MOVLW      34
0x00B9	0x00FC      	MOVWF      R12
0x00BA	0x301C      	MOVLW      28
0x00BB	0x00FD      	MOVWF      R13
L_toggle_CSN3:
0x00BC	0x0BFD      	DECFSZ     R13, 1
0x00BD	0x28BC      	GOTO       L_toggle_CSN3
0x00BE	0x0BFC      	DECFSZ     R12, 1
0x00BF	0x28BC      	GOTO       L_toggle_CSN3
0x00C0	0x0000      	NOP
;nRF24L01_lib.c,49 :: 		CSN_PIN=0;
0x00C1	0x1109      	BCF        RE2_bit, BitPos(RE2_bit+0)
;nRF24L01_lib.c,50 :: 		}
L_end_toggle_CSN:
0x00C2	0x0008      	RETURN
; end of _toggle_CSN
_enable_dynamic_payload:
;nRF24L01_lib.c,161 :: 		void enable_dynamic_payload(char pipe){
;nRF24L01_lib.c,163 :: 		res=NRF_RW(FEATURE | R_REGISTER,NOP);
0x00C3	0x301D      	MOVLW      29
0x00C4	0x1283      	BCF        STATUS, 5
0x00C5	0x1303      	BCF        STATUS, 6
0x00C6	0x00B3      	MOVWF      FARG_NRF_RW_command
0x00C7	0x30FF      	MOVLW      255
0x00C8	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x00C9	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,164 :: 		NRF_RW(FEATURE | W_REGISTER,res | 0b00000100);
0x00CA	0x303D      	MOVLW      61
0x00CB	0x00B3      	MOVWF      FARG_NRF_RW_command
0x00CC	0x3004      	MOVLW      4
0x00CD	0x0470      	IORWF      R0, 0
0x00CE	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x00CF	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,165 :: 		if (MODE=='T'){pipe=0;}
0x00D0	0x0820      	MOVF       _MODE, 0
0x00D1	0x3A54      	XORLW      84
0x00D2	0x1D03      	BTFSS      STATUS, 2
0x00D3	0x28D5      	GOTO       L_enable_dynamic_payload13
0x00D4	0x01AF      	CLRF       FARG_enable_dynamic_payload_pipe
L_enable_dynamic_payload13:
;nRF24L01_lib.c,166 :: 		res=NRF_RW(DYNPD | R_REGISTER,NOP);
0x00D5	0x301C      	MOVLW      28
0x00D6	0x00B3      	MOVWF      FARG_NRF_RW_command
0x00D7	0x30FF      	MOVLW      255
0x00D8	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x00D9	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,167 :: 		NRF_RW(DYNPD | W_REGISTER,res | 0x01<<pipe);
0x00DA	0x303C      	MOVLW      60
0x00DB	0x00B3      	MOVWF      FARG_NRF_RW_command
0x00DC	0x082F      	MOVF       FARG_enable_dynamic_payload_pipe, 0
0x00DD	0x00F2      	MOVWF      R2
0x00DE	0x3001      	MOVLW      1
0x00DF	0x00F1      	MOVWF      R1
0x00E0	0x0872      	MOVF       R2, 0
L__enable_dynamic_payload48:
0x00E1	0x1903      	BTFSC      STATUS, 2
0x00E2	0x28E7      	GOTO       L__enable_dynamic_payload49
0x00E3	0x0DF1      	RLF        R1, 1
0x00E4	0x1071      	BCF        R1, 0
0x00E5	0x3EFF      	ADDLW      255
0x00E6	0x28E1      	GOTO       L__enable_dynamic_payload48
L__enable_dynamic_payload49:
0x00E7	0x0871      	MOVF       R1, 0
0x00E8	0x0470      	IORWF      R0, 0
0x00E9	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x00EA	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,169 :: 		}
L_end_enable_dynamic_payload:
0x00EB	0x0008      	RETURN
; end of _enable_dynamic_payload
_TX_write_buffer:
;nRF24L01_lib.c,242 :: 		void TX_write_buffer(unsigned char dat_width,unsigned char *dat ){
;nRF24L01_lib.c,244 :: 		toggle();
0x00EC	0x201D      	CALL       _toggle
;nRF24L01_lib.c,245 :: 		SPI1_Write(W_TX_PAYLOAD);
0x00ED	0x30A0      	MOVLW      160
0x00EE	0x00B5      	MOVWF      FARG_SPI1_Write_data_
0x00EF	0x2010      	CALL       _SPI1_Write
;nRF24L01_lib.c,246 :: 		for ( i = 0 ; i < dat_width ; i++ ){
0x00F0	0x01B1      	CLRF       TX_write_buffer_i_L0
L_TX_write_buffer22:
0x00F1	0x082F      	MOVF       FARG_TX_write_buffer_dat_width, 0
0x00F2	0x0231      	SUBWF      TX_write_buffer_i_L0, 0
0x00F3	0x1803      	BTFSC      STATUS, 0
0x00F4	0x28FD      	GOTO       L_TX_write_buffer23
;nRF24L01_lib.c,247 :: 		SPI1_Write(*dat);
0x00F5	0x0830      	MOVF       FARG_TX_write_buffer_dat, 0
0x00F6	0x0084      	MOVWF      FSR
0x00F7	0x0800      	MOVF       INDF, 0
0x00F8	0x00B5      	MOVWF      FARG_SPI1_Write_data_
0x00F9	0x2010      	CALL       _SPI1_Write
;nRF24L01_lib.c,248 :: 		dat++;
0x00FA	0x0AB0      	INCF       FARG_TX_write_buffer_dat, 1
;nRF24L01_lib.c,246 :: 		for ( i = 0 ; i < dat_width ; i++ ){
0x00FB	0x0AB1      	INCF       TX_write_buffer_i_L0, 1
;nRF24L01_lib.c,249 :: 		}
0x00FC	0x28F1      	GOTO       L_TX_write_buffer22
L_TX_write_buffer23:
;nRF24L01_lib.c,250 :: 		CE_PIN=1;
0x00FD	0x1507      	BSF        RC2_bit, BitPos(RC2_bit+0)
;nRF24L01_lib.c,251 :: 		}
L_end_TX_write_buffer:
0x00FE	0x0008      	RETURN
; end of _TX_write_buffer
_power_mode:
;nRF24L01_lib.c,77 :: 		void power_mode(unsigned char down){
;nRF24L01_lib.c,79 :: 		res=NRF_RW(CONFIG | R_REGISTER,NOP);
0x00FF	0x1283      	BCF        STATUS, 5
0x0100	0x1303      	BCF        STATUS, 6
0x0101	0x01B3      	CLRF       FARG_NRF_RW_command
0x0102	0x30FF      	MOVLW      255
0x0103	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x0104	0x2035      	CALL       _NRF_RW
0x0105	0x0870      	MOVF       R0, 0
0x0106	0x00B0      	MOVWF      power_mode_res_L0
;nRF24L01_lib.c,80 :: 		if (down==0){
0x0107	0x082F      	MOVF       FARG_power_mode_down, 0
0x0108	0x3A00      	XORLW      0
0x0109	0x1D03      	BTFSS      STATUS, 2
0x010A	0x2914      	GOTO       L_power_mode5
;nRF24L01_lib.c,81 :: 		NRF_RW(CONFIG | W_REGISTER,res & 0b11111101);
0x010B	0x3020      	MOVLW      32
0x010C	0x00B3      	MOVWF      FARG_NRF_RW_command
0x010D	0x30FD      	MOVLW      253
0x010E	0x0530      	ANDWF      power_mode_res_L0, 0
0x010F	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x0110	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,82 :: 		MODE='D';
0x0111	0x3044      	MOVLW      68
0x0112	0x00A0      	MOVWF      _MODE
;nRF24L01_lib.c,83 :: 		}
0x0113	0x291C      	GOTO       L_power_mode6
L_power_mode5:
;nRF24L01_lib.c,85 :: 		NRF_RW(CONFIG | W_REGISTER,res | 0b00000010);
0x0114	0x3020      	MOVLW      32
0x0115	0x00B3      	MOVWF      FARG_NRF_RW_command
0x0116	0x3002      	MOVLW      2
0x0117	0x0430      	IORWF      power_mode_res_L0, 0
0x0118	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x0119	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,86 :: 		MODE='U';
0x011A	0x3055      	MOVLW      85
0x011B	0x00A0      	MOVWF      _MODE
;nRF24L01_lib.c,87 :: 		}
L_power_mode6:
;nRF24L01_lib.c,89 :: 		}
L_end_power_mode:
0x011C	0x0008      	RETURN
; end of _power_mode
_my_UART1_Read:
;nrf_pc.c,17 :: 		unsigned char my_UART1_Read(){
;nrf_pc.c,19 :: 		while (!UART1_Data_Ready()){}
L_my_UART1_Read0:
0x011D	0x2051      	CALL       _UART1_Data_Ready
0x011E	0x0870      	MOVF       R0, 0
0x011F	0x1D03      	BTFSS      STATUS, 2
0x0120	0x2922      	GOTO       L_my_UART1_Read1
0x0121	0x291D      	GOTO       L_my_UART1_Read0
L_my_UART1_Read1:
;nrf_pc.c,20 :: 		res=UART1_Read();
0x0122	0x2046      	CALL       _UART1_Read
;nrf_pc.c,21 :: 		return res;
;nrf_pc.c,22 :: 		}
L_end_my_UART1_Read:
0x0123	0x0008      	RETURN
; end of _my_UART1_Read
_TX_mode:
;nRF24L01_lib.c,101 :: 		void TX_mode(){
;nRF24L01_lib.c,103 :: 		res=NRF_RW(CONFIG | R_REGISTER,NOP);
0x0124	0x1283      	BCF        STATUS, 5
0x0125	0x1303      	BCF        STATUS, 6
0x0126	0x01B3      	CLRF       FARG_NRF_RW_command
0x0127	0x30FF      	MOVLW      255
0x0128	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x0129	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,104 :: 		NRF_RW(CONFIG | W_REGISTER,res & 0b11111110);
0x012A	0x3020      	MOVLW      32
0x012B	0x00B3      	MOVWF      FARG_NRF_RW_command
0x012C	0x30FE      	MOVLW      254
0x012D	0x0570      	ANDWF      R0, 0
0x012E	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x012F	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,105 :: 		delay_us(150);
0x0130	0x3063      	MOVLW      99
0x0131	0x00FD      	MOVWF      R13
L_TX_mode8:
0x0132	0x0BFD      	DECFSZ     R13, 1
0x0133	0x2932      	GOTO       L_TX_mode8
0x0134	0x0000      	NOP
0x0135	0x0000      	NOP
;nRF24L01_lib.c,107 :: 		MODE='T';
0x0136	0x3054      	MOVLW      84
0x0137	0x00A0      	MOVWF      _MODE
;nRF24L01_lib.c,108 :: 		}
L_end_TX_mode:
0x0138	0x0008      	RETURN
; end of _TX_mode
_TX_set_address:
;nRF24L01_lib.c,178 :: 		void TX_set_address(unsigned char addr_width,unsigned char * addr){
;nRF24L01_lib.c,180 :: 		NRF_RW(SETUP_AW | W_REGISTER,addr_width-2);
0x0139	0x3023      	MOVLW      35
0x013A	0x1283      	BCF        STATUS, 5
0x013B	0x1303      	BCF        STATUS, 6
0x013C	0x00B3      	MOVWF      FARG_NRF_RW_command
0x013D	0x3002      	MOVLW      2
0x013E	0x022B      	SUBWF      FARG_TX_set_address_addr_width, 0
0x013F	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x0140	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,181 :: 		toggle();
0x0141	0x201D      	CALL       _toggle
;nRF24L01_lib.c,182 :: 		SPI1_Write(TX_ADDR | W_REGISTER);
0x0142	0x3030      	MOVLW      48
0x0143	0x00B5      	MOVWF      FARG_SPI1_Write_data_
0x0144	0x2010      	CALL       _SPI1_Write
;nRF24L01_lib.c,183 :: 		for ( i = 0 ; i < addr_width ; i++ ){
0x0145	0x01AD      	CLRF       TX_set_address_i_L0
L_TX_set_address14:
0x0146	0x082B      	MOVF       FARG_TX_set_address_addr_width, 0
0x0147	0x022D      	SUBWF      TX_set_address_i_L0, 0
0x0148	0x1803      	BTFSC      STATUS, 0
0x0149	0x2952      	GOTO       L_TX_set_address15
;nRF24L01_lib.c,184 :: 		SPI1_Write(*addr);
0x014A	0x082C      	MOVF       FARG_TX_set_address_addr, 0
0x014B	0x0084      	MOVWF      FSR
0x014C	0x0800      	MOVF       INDF, 0
0x014D	0x00B5      	MOVWF      FARG_SPI1_Write_data_
0x014E	0x2010      	CALL       _SPI1_Write
;nRF24L01_lib.c,185 :: 		addr++;
0x014F	0x0AAC      	INCF       FARG_TX_set_address_addr, 1
;nRF24L01_lib.c,183 :: 		for ( i = 0 ; i < addr_width ; i++ ){
0x0150	0x0AAD      	INCF       TX_set_address_i_L0, 1
;nRF24L01_lib.c,186 :: 		}
0x0151	0x2946      	GOTO       L_TX_set_address14
L_TX_set_address15:
;nRF24L01_lib.c,189 :: 		}
L_end_TX_set_address:
0x0152	0x0008      	RETURN
; end of _TX_set_address
_TX_output_power_control:
;nRF24L01_lib.c,131 :: 		void TX_output_power_control(unsigned char pwr){
;nRF24L01_lib.c,133 :: 		if (pwr<4){
0x0153	0x3004      	MOVLW      4
0x0154	0x1283      	BCF        STATUS, 5
0x0155	0x1303      	BCF        STATUS, 6
0x0156	0x022B      	SUBWF      FARG_TX_output_power_control_pwr, 0
0x0157	0x1803      	BTFSC      STATUS, 0
0x0158	0x296C      	GOTO       L_TX_output_power_control12
;nRF24L01_lib.c,134 :: 		res=NRF_RW(RF_SETUP | R_REGISTER,NOP);
0x0159	0x3006      	MOVLW      6
0x015A	0x00B3      	MOVWF      FARG_NRF_RW_command
0x015B	0x30FF      	MOVLW      255
0x015C	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x015D	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,135 :: 		res=merge(res,pwr,1,0xF9);
0x015E	0x0870      	MOVF       R0, 0
0x015F	0x00AF      	MOVWF      FARG_merge_target
0x0160	0x082B      	MOVF       FARG_TX_output_power_control_pwr, 0
0x0161	0x00B0      	MOVWF      FARG_merge_value
0x0162	0x3001      	MOVLW      1
0x0163	0x00B1      	MOVWF      FARG_merge_shift
0x0164	0x30F9      	MOVLW      249
0x0165	0x00B2      	MOVWF      FARG_merge_mask
0x0166	0x206C      	CALL       _merge
;nRF24L01_lib.c,136 :: 		NRF_RW(RF_SETUP | W_REGISTER,res);
0x0167	0x3026      	MOVLW      38
0x0168	0x00B3      	MOVWF      FARG_NRF_RW_command
0x0169	0x0870      	MOVF       R0, 0
0x016A	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x016B	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,138 :: 		}
L_TX_output_power_control12:
;nRF24L01_lib.c,139 :: 		}
L_end_TX_output_power_control:
0x016C	0x0008      	RETURN
; end of _TX_output_power_control
_RX_ack_with_payload:
;nRF24L01_lib.c,229 :: 		void RX_ack_with_payload(unsigned char pipe,unsigned char dat_width,unsigned char * dat){
;nRF24L01_lib.c,231 :: 		enable_dynamic_payload(pipe);
0x016D	0x1283      	BCF        STATUS, 5
0x016E	0x1303      	BCF        STATUS, 6
0x016F	0x082B      	MOVF       FARG_RX_ack_with_payload_pipe, 0
0x0170	0x00AF      	MOVWF      FARG_enable_dynamic_payload_pipe
0x0171	0x20C3      	CALL       _enable_dynamic_payload
;nRF24L01_lib.c,232 :: 		res=NRF_RW(FEATURE | R_REGISTER,NOP);
0x0172	0x301D      	MOVLW      29
0x0173	0x00B3      	MOVWF      FARG_NRF_RW_command
0x0174	0x30FF      	MOVLW      255
0x0175	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x0176	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,233 :: 		NRF_RW(FEATURE | W_REGISTER,res | 0b00000010);
0x0177	0x303D      	MOVLW      61
0x0178	0x00B3      	MOVWF      FARG_NRF_RW_command
0x0179	0x3002      	MOVLW      2
0x017A	0x0470      	IORWF      R0, 0
0x017B	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x017C	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,234 :: 		toggle();
0x017D	0x201D      	CALL       _toggle
;nRF24L01_lib.c,235 :: 		SPI1_Write(W_ACK_PAYLOAD | pipe);
0x017E	0x30A8      	MOVLW      168
0x017F	0x042B      	IORWF      FARG_RX_ack_with_payload_pipe, 0
0x0180	0x00B5      	MOVWF      FARG_SPI1_Write_data_
0x0181	0x2010      	CALL       _SPI1_Write
;nRF24L01_lib.c,236 :: 		for ( i = 0 ; i < dat_width ; i++ ){
0x0182	0x01AE      	CLRF       RX_ack_with_payload_i_L0
L_RX_ack_with_payload19:
0x0183	0x082C      	MOVF       FARG_RX_ack_with_payload_dat_width, 0
0x0184	0x022E      	SUBWF      RX_ack_with_payload_i_L0, 0
0x0185	0x1803      	BTFSC      STATUS, 0
0x0186	0x298F      	GOTO       L_RX_ack_with_payload20
;nRF24L01_lib.c,237 :: 		SPI1_Write(*dat);
0x0187	0x082D      	MOVF       FARG_RX_ack_with_payload_dat, 0
0x0188	0x0084      	MOVWF      FSR
0x0189	0x0800      	MOVF       INDF, 0
0x018A	0x00B5      	MOVWF      FARG_SPI1_Write_data_
0x018B	0x2010      	CALL       _SPI1_Write
;nRF24L01_lib.c,238 :: 		dat++;
0x018C	0x0AAD      	INCF       FARG_RX_ack_with_payload_dat, 1
;nRF24L01_lib.c,236 :: 		for ( i = 0 ; i < dat_width ; i++ ){
0x018D	0x0AAE      	INCF       RX_ack_with_payload_i_L0, 1
;nRF24L01_lib.c,239 :: 		}
0x018E	0x2983      	GOTO       L_RX_ack_with_payload19
L_RX_ack_with_payload20:
;nRF24L01_lib.c,241 :: 		}
L_end_RX_ack_with_payload:
0x018F	0x0008      	RETURN
; end of _RX_ack_with_payload
_rx_start_simple:
;nrf_pc.c,31 :: 		void rx_start_simple(){
;nrf_pc.c,33 :: 		init_SPI();
0x0190	0x2085      	CALL       _init_spi
;nrf_pc.c,36 :: 		RX_set_static_payload(RX_PW_P0,1);
0x0191	0x3011      	MOVLW      17
0x0192	0x00AF      	MOVWF      FARG_RX_set_static_payload_reg
0x0193	0x3001      	MOVLW      1
0x0194	0x00B0      	MOVWF      FARG_RX_set_static_payload_length
0x0195	0x208E      	CALL       _RX_set_static_payload
;nrf_pc.c,37 :: 		RX_mode();
0x0196	0x2097      	CALL       _RX_mode
;nrf_pc.c,38 :: 		power_mode(1);
0x0197	0x3001      	MOVLW      1
0x0198	0x00AF      	MOVWF      FARG_power_mode_down
0x0199	0x20FF      	CALL       _power_mode
;nrf_pc.c,39 :: 		CE_PIN=1;
0x019A	0x1507      	BSF        RC2_bit, BitPos(RC2_bit+0)
;nrf_pc.c,40 :: 		}
L_end_rx_start_simple:
0x019B	0x0008      	RETURN
; end of _rx_start_simple
_RX_LNA_gain:
;nRF24L01_lib.c,143 :: 		void RX_LNA_gain(unsigned char gain){
;nRF24L01_lib.c,145 :: 		res=NRF_RW(RF_SETUP | R_REGISTER,NOP);
0x019C	0x3006      	MOVLW      6
0x019D	0x1283      	BCF        STATUS, 5
0x019E	0x1303      	BCF        STATUS, 6
0x019F	0x00B3      	MOVWF      FARG_NRF_RW_command
0x01A0	0x30FF      	MOVLW      255
0x01A1	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x01A2	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,146 :: 		res=merge(res,gain,0,0xFE);
0x01A3	0x0870      	MOVF       R0, 0
0x01A4	0x00AF      	MOVWF      FARG_merge_target
0x01A5	0x082B      	MOVF       FARG_RX_LNA_gain_gain, 0
0x01A6	0x00B0      	MOVWF      FARG_merge_value
0x01A7	0x01B1      	CLRF       FARG_merge_shift
0x01A8	0x30FE      	MOVLW      254
0x01A9	0x00B2      	MOVWF      FARG_merge_mask
0x01AA	0x206C      	CALL       _merge
;nRF24L01_lib.c,147 :: 		NRF_RW(RF_SETUP | W_REGISTER,res);
0x01AB	0x3026      	MOVLW      38
0x01AC	0x00B3      	MOVWF      FARG_NRF_RW_command
0x01AD	0x0870      	MOVF       R0, 0
0x01AE	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x01AF	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,149 :: 		}
L_end_RX_LNA_gain:
0x01B0	0x0008      	RETURN
; end of _RX_LNA_gain
_set_pipe_address:
;nRF24L01_lib.c,253 :: 		void set_pipe_address(unsigned char pipe,unsigned char width,unsigned char *address){
;nRF24L01_lib.c,255 :: 		toggle();
0x01B1	0x201D      	CALL       _toggle
;nRF24L01_lib.c,256 :: 		SPI1_Write(W_REGISTER | pipe);
0x01B2	0x3020      	MOVLW      32
0x01B3	0x042B      	IORWF      FARG_set_pipe_address_pipe, 0
0x01B4	0x00B5      	MOVWF      FARG_SPI1_Write_data_
0x01B5	0x2010      	CALL       _SPI1_Write
;nRF24L01_lib.c,257 :: 		delay_us(GLOBAL_DELAY*50);
0x01B6	0x3022      	MOVLW      34
0x01B7	0x00FC      	MOVWF      R12
0x01B8	0x301C      	MOVLW      28
0x01B9	0x00FD      	MOVWF      R13
L_set_pipe_address25:
0x01BA	0x0BFD      	DECFSZ     R13, 1
0x01BB	0x29BA      	GOTO       L_set_pipe_address25
0x01BC	0x0BFC      	DECFSZ     R12, 1
0x01BD	0x29BA      	GOTO       L_set_pipe_address25
0x01BE	0x0000      	NOP
;nRF24L01_lib.c,258 :: 		for (i=0;i<width;i++){SPI1_Write(*address);address++;delay_us(GLOBAL_DELAY*50);}
0x01BF	0x01AE      	CLRF       set_pipe_address_i_L0
L_set_pipe_address26:
0x01C0	0x082C      	MOVF       FARG_set_pipe_address_width, 0
0x01C1	0x022E      	SUBWF      set_pipe_address_i_L0, 0
0x01C2	0x1803      	BTFSC      STATUS, 0
0x01C3	0x29D5      	GOTO       L_set_pipe_address27
0x01C4	0x082D      	MOVF       FARG_set_pipe_address_address, 0
0x01C5	0x0084      	MOVWF      FSR
0x01C6	0x0800      	MOVF       INDF, 0
0x01C7	0x00B5      	MOVWF      FARG_SPI1_Write_data_
0x01C8	0x2010      	CALL       _SPI1_Write
0x01C9	0x0AAD      	INCF       FARG_set_pipe_address_address, 1
0x01CA	0x3022      	MOVLW      34
0x01CB	0x00FC      	MOVWF      R12
0x01CC	0x301C      	MOVLW      28
0x01CD	0x00FD      	MOVWF      R13
L_set_pipe_address29:
0x01CE	0x0BFD      	DECFSZ     R13, 1
0x01CF	0x29CE      	GOTO       L_set_pipe_address29
0x01D0	0x0BFC      	DECFSZ     R12, 1
0x01D1	0x29CE      	GOTO       L_set_pipe_address29
0x01D2	0x0000      	NOP
0x01D3	0x0AAE      	INCF       set_pipe_address_i_L0, 1
0x01D4	0x29C0      	GOTO       L_set_pipe_address26
L_set_pipe_address27:
;nRF24L01_lib.c,260 :: 		}
L_end_set_pipe_address:
0x01D5	0x0008      	RETURN
; end of _set_pipe_address
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x01D6	0x2065      	CALL       _____DoICP
0x01D7	0x118A      	BCF        PCLATH, 3
0x01D8	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x01D9	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x01DA	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x01DB	0x0AA1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x01DC	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x01DD	0x0AA2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x01DE	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x01DF	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x01E0	0x29D6      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x01E1	0x0008      	RETURN
; end of ___CC2DW
_tx_start_simple:
;nrf_pc.c,41 :: 		void tx_start_simple(){
;nrf_pc.c,42 :: 		unsigned char dat[1]={0xA5};
0x01E2	0x30A5      	MOVLW      165
0x01E3	0x1283      	BCF        STATUS, 5
0x01E4	0x1303      	BCF        STATUS, 6
0x01E5	0x00AB      	MOVWF      tx_start_simple_dat_L0
;nrf_pc.c,44 :: 		init_SPI();
0x01E6	0x2085      	CALL       _init_spi
;nrf_pc.c,49 :: 		TX_mode();
0x01E7	0x2124      	CALL       _TX_mode
;nrf_pc.c,50 :: 		power_mode(1);
0x01E8	0x3001      	MOVLW      1
0x01E9	0x00AF      	MOVWF      FARG_power_mode_down
0x01EA	0x20FF      	CALL       _power_mode
;nrf_pc.c,51 :: 		CE_PIN=1;
0x01EB	0x1507      	BSF        RC2_bit, BitPos(RC2_bit+0)
;nrf_pc.c,52 :: 		TX_write_buffer(dat,1);
0x01EC	0x302B      	MOVLW      tx_start_simple_dat_L0
0x01ED	0x00AF      	MOVWF      FARG_TX_write_buffer_dat_width
0x01EE	0x3001      	MOVLW      1
0x01EF	0x00B0      	MOVWF      FARG_TX_write_buffer_dat
0x01F0	0x20EC      	CALL       _TX_write_buffer
;nrf_pc.c,53 :: 		}
L_end_tx_start_simple:
0x01F1	0x0008      	RETURN
; end of _tx_start_simple
_TX_disable_auto_ack:
;nRF24L01_lib.c,199 :: 		void TX_disable_auto_ack(unsigned char pipe){
;nRF24L01_lib.c,201 :: 		res=NRF_RW(EN_AA | R_REGISTER,NOP);
0x01F2	0x3001      	MOVLW      1
0x01F3	0x1283      	BCF        STATUS, 5
0x01F4	0x1303      	BCF        STATUS, 6
0x01F5	0x00B3      	MOVWF      FARG_NRF_RW_command
0x01F6	0x30FF      	MOVLW      255
0x01F7	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x01F8	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,202 :: 		NRF_RW(EN_AA | W_REGISTER, res & ~(0x01<<pipe));
0x01F9	0x3021      	MOVLW      33
0x01FA	0x00B3      	MOVWF      FARG_NRF_RW_command
0x01FB	0x082B      	MOVF       FARG_TX_disable_auto_ack_pipe, 0
0x01FC	0x00F2      	MOVWF      R2
0x01FD	0x3001      	MOVLW      1
0x01FE	0x00F1      	MOVWF      R1
0x01FF	0x0872      	MOVF       R2, 0
L__TX_disable_auto_ack56:
0x0200	0x1903      	BTFSC      STATUS, 2
0x0201	0x2A06      	GOTO       L__TX_disable_auto_ack57
0x0202	0x0DF1      	RLF        R1, 1
0x0203	0x1071      	BCF        R1, 0
0x0204	0x3EFF      	ADDLW      255
0x0205	0x2A00      	GOTO       L__TX_disable_auto_ack56
L__TX_disable_auto_ack57:
0x0206	0x09F1      	COMF       R1, 1
0x0207	0x0871      	MOVF       R1, 0
0x0208	0x0570      	ANDWF      R0, 0
0x0209	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x020A	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,204 :: 		}
L_end_TX_disable_auto_ack:
0x020B	0x0008      	RETURN
; end of _TX_disable_auto_ack
_get_STATUS:
;nRF24L01_lib.c,52 :: 		unsigned char get_STATUS(){
;nRF24L01_lib.c,54 :: 		toggle_CSN();
0x020C	0x20AC      	CALL       _toggle_CSN
;nRF24L01_lib.c,55 :: 		res=SPI1_Read(NOP);
0x020D	0x30FF      	MOVLW      255
0x020E	0x00B5      	MOVWF      FARG_SPI1_Read_buffer
0x020F	0x2003      	CALL       _SPI1_Read
;nRF24L01_lib.c,57 :: 		return res;
;nRF24L01_lib.c,58 :: 		}
L_end_get_STATUS:
0x0210	0x0008      	RETURN
; end of _get_STATUS
_set_RF_CH:
;nRF24L01_lib.c,122 :: 		void set_RF_CH(unsigned char ch){
;nRF24L01_lib.c,123 :: 		if (ch<126){
0x0211	0x307E      	MOVLW      126
0x0212	0x1283      	BCF        STATUS, 5
0x0213	0x1303      	BCF        STATUS, 6
0x0214	0x022B      	SUBWF      FARG_set_RF_CH_ch, 0
0x0215	0x1803      	BTFSC      STATUS, 0
0x0216	0x2A1C      	GOTO       L_set_RF_CH11
;nRF24L01_lib.c,124 :: 		NRF_RW(RF_CH | W_REGISTER,ch);
0x0217	0x3025      	MOVLW      37
0x0218	0x00B3      	MOVWF      FARG_NRF_RW_command
0x0219	0x082B      	MOVF       FARG_set_RF_CH_ch, 0
0x021A	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x021B	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,126 :: 		}
L_set_RF_CH11:
;nRF24L01_lib.c,127 :: 		}
L_end_set_RF_CH:
0x021C	0x0008      	RETURN
; end of _set_RF_CH
_my_UART1_Read_buffer:
;nrf_pc.c,23 :: 		void my_UART1_Read_buffer(unsigned char * buffer,unsigned char dat_width){
;nrf_pc.c,25 :: 		for (i=0;i<dat_width;i++){
0x021D	0x1283      	BCF        STATUS, 5
0x021E	0x1303      	BCF        STATUS, 6
0x021F	0x01AD      	CLRF       my_UART1_Read_buffer_i_L0
L_my_UART1_Read_buffer2:
0x0220	0x082C      	MOVF       FARG_my_UART1_Read_buffer_dat_width, 0
0x0221	0x022D      	SUBWF      my_UART1_Read_buffer_i_L0, 0
0x0222	0x1803      	BTFSC      STATUS, 0
0x0223	0x2A2E      	GOTO       L_my_UART1_Read_buffer3
;nrf_pc.c,26 :: 		buffer[i]=my_UART1_Read();
0x0224	0x082D      	MOVF       my_UART1_Read_buffer_i_L0, 0
0x0225	0x072B      	ADDWF      FARG_my_UART1_Read_buffer_buffer, 0
0x0226	0x00AE      	MOVWF      FLOC__my_UART1_Read_buffer
0x0227	0x211D      	CALL       _my_UART1_Read
0x0228	0x082E      	MOVF       FLOC__my_UART1_Read_buffer, 0
0x0229	0x0084      	MOVWF      FSR
0x022A	0x0870      	MOVF       R0, 0
0x022B	0x0080      	MOVWF      INDF
;nrf_pc.c,25 :: 		for (i=0;i<dat_width;i++){
0x022C	0x0AAD      	INCF       my_UART1_Read_buffer_i_L0, 1
;nrf_pc.c,27 :: 		}
0x022D	0x2A20      	GOTO       L_my_UART1_Read_buffer2
L_my_UART1_Read_buffer3:
;nrf_pc.c,28 :: 		}
L_end_my_UART1_Read_buffer:
0x022E	0x0008      	RETURN
; end of _my_UART1_Read_buffer
_TX_enable_auto_ack:
;nRF24L01_lib.c,193 :: 		void TX_enable_auto_ack(unsigned char pipe){
;nRF24L01_lib.c,195 :: 		res=NRF_RW(EN_AA | R_REGISTER,NOP);
0x022F	0x3001      	MOVLW      1
0x0230	0x1283      	BCF        STATUS, 5
0x0231	0x1303      	BCF        STATUS, 6
0x0232	0x00B3      	MOVWF      FARG_NRF_RW_command
0x0233	0x30FF      	MOVLW      255
0x0234	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x0235	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,196 :: 		NRF_RW( EN_AA | W_REGISTER,res | 0x01<<pipe);
0x0236	0x3021      	MOVLW      33
0x0237	0x00B3      	MOVWF      FARG_NRF_RW_command
0x0238	0x082B      	MOVF       FARG_TX_enable_auto_ack_pipe, 0
0x0239	0x00F2      	MOVWF      R2
0x023A	0x3001      	MOVLW      1
0x023B	0x00F1      	MOVWF      R1
0x023C	0x0872      	MOVF       R2, 0
L__TX_enable_auto_ack53:
0x023D	0x1903      	BTFSC      STATUS, 2
0x023E	0x2A43      	GOTO       L__TX_enable_auto_ack54
0x023F	0x0DF1      	RLF        R1, 1
0x0240	0x1071      	BCF        R1, 0
0x0241	0x3EFF      	ADDLW      255
0x0242	0x2A3D      	GOTO       L__TX_enable_auto_ack53
L__TX_enable_auto_ack54:
0x0243	0x0871      	MOVF       R1, 0
0x0244	0x0470      	IORWF      R0, 0
0x0245	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x0246	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,198 :: 		}
L_end_TX_enable_auto_ack:
0x0247	0x0008      	RETURN
; end of _TX_enable_auto_ack
_CRC_config:
;nRF24L01_lib.c,207 :: 		void CRC_config(char crc){
;nRF24L01_lib.c,209 :: 		res=NRF_RW(CONFIG | R_REGISTER,NOP);
0x0248	0x1283      	BCF        STATUS, 5
0x0249	0x1303      	BCF        STATUS, 6
0x024A	0x01B3      	CLRF       FARG_NRF_RW_command
0x024B	0x30FF      	MOVLW      255
0x024C	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x024D	0x2035      	CALL       _NRF_RW
0x024E	0x0870      	MOVF       R0, 0
0x024F	0x00AC      	MOVWF      CRC_config_res_L0
;nRF24L01_lib.c,210 :: 		if (crc==1){NRF_RW(CONFIG | W_REGISTER,res & 0b11111011);}
0x0250	0x082B      	MOVF       FARG_CRC_config_crc, 0
0x0251	0x3A01      	XORLW      1
0x0252	0x1D03      	BTFSS      STATUS, 2
0x0253	0x2A5B      	GOTO       L_CRC_config17
0x0254	0x3020      	MOVLW      32
0x0255	0x00B3      	MOVWF      FARG_NRF_RW_command
0x0256	0x30FB      	MOVLW      251
0x0257	0x052C      	ANDWF      CRC_config_res_L0, 0
0x0258	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x0259	0x2035      	CALL       _NRF_RW
0x025A	0x2A61      	GOTO       L_CRC_config18
L_CRC_config17:
;nRF24L01_lib.c,211 :: 		else {NRF_RW(CONFIG | W_REGISTER,res | 0b00000100);}
0x025B	0x3020      	MOVLW      32
0x025C	0x00B3      	MOVWF      FARG_NRF_RW_command
0x025D	0x3004      	MOVLW      4
0x025E	0x042C      	IORWF      CRC_config_res_L0, 0
0x025F	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x0260	0x2035      	CALL       _NRF_RW
L_CRC_config18:
;nRF24L01_lib.c,213 :: 		}
L_end_CRC_config:
0x0261	0x0008      	RETURN
; end of _CRC_config
_set_address_width:
;nRF24L01_lib.c,171 :: 		void set_address_width(unsigned char width){
;nRF24L01_lib.c,172 :: 		NRF_RW(SETUP_AW | W_REGISTER,width-2);
0x0262	0x3023      	MOVLW      35
0x0263	0x1283      	BCF        STATUS, 5
0x0264	0x1303      	BCF        STATUS, 6
0x0265	0x00B3      	MOVWF      FARG_NRF_RW_command
0x0266	0x3002      	MOVLW      2
0x0267	0x022B      	SUBWF      FARG_set_address_width_width, 0
0x0268	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x0269	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,174 :: 		}
L_end_set_address_width:
0x026A	0x0008      	RETURN
; end of _set_address_width
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x026B	0x1683      	BSF        STATUS, 5
0x026C	0x1303      	BCF        STATUS, 6
0x026D	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x026E	0x3090      	MOVLW      144
0x026F	0x1283      	BCF        STATUS, 5
0x0270	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x0271	0x1683      	BSF        STATUS, 5
0x0272	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x0273	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x0274	0x1283      	BCF        STATUS, 5
0x0275	0x1E8C      	BTFSS      PIR1, 5
0x0276	0x2A7A      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x0277	0x081A      	MOVF       RCREG, 0
0x0278	0x00F0      	MOVWF      R0
0x0279	0x2A74      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x027A	0x0008      	RETURN
; end of _UART1_Init
_TX_auto_retransmit:
;nRF24L01_lib.c,219 :: 		void TX_auto_retransmit(unsigned char delay, unsigned char count){
;nRF24L01_lib.c,220 :: 		delay = delay<<4;
0x027B	0x1283      	BCF        STATUS, 5
0x027C	0x1303      	BCF        STATUS, 6
0x027D	0x082B      	MOVF       FARG_TX_auto_retransmit_delay, 0
0x027E	0x00F0      	MOVWF      R0
0x027F	0x0DF0      	RLF        R0, 1
0x0280	0x1070      	BCF        R0, 0
0x0281	0x0DF0      	RLF        R0, 1
0x0282	0x1070      	BCF        R0, 0
0x0283	0x0DF0      	RLF        R0, 1
0x0284	0x1070      	BCF        R0, 0
0x0285	0x0DF0      	RLF        R0, 1
0x0286	0x1070      	BCF        R0, 0
0x0287	0x0870      	MOVF       R0, 0
0x0288	0x00AB      	MOVWF      FARG_TX_auto_retransmit_delay
;nRF24L01_lib.c,221 :: 		NRF_RW(SETUP_RETR | W_REGISTER, delay | count );
0x0289	0x3024      	MOVLW      36
0x028A	0x00B3      	MOVWF      FARG_NRF_RW_command
0x028B	0x082C      	MOVF       FARG_TX_auto_retransmit_count, 0
0x028C	0x0470      	IORWF      R0, 0
0x028D	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x028E	0x2035      	CALL       _NRF_RW
;nRF24L01_lib.c,223 :: 		}
L_end_TX_auto_retransmit:
0x028F	0x0008      	RETURN
; end of _TX_auto_retransmit
_set_data_rate:
;nRF24L01_lib.c,112 :: 		void set_data_rate(unsigned char rate){
;nRF24L01_lib.c,114 :: 		res=NRF_RW(RF_SETUP | R_REGISTER,NOP);
0x0290	0x3006      	MOVLW      6
0x0291	0x1283      	BCF        STATUS, 5
0x0292	0x1303      	BCF        STATUS, 6
0x0293	0x00B3      	MOVWF      FARG_NRF_RW_command
0x0294	0x30FF      	MOVLW      255
0x0295	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x0296	0x2035      	CALL       _NRF_RW
0x0297	0x0870      	MOVF       R0, 0
0x0298	0x00AC      	MOVWF      set_data_rate_res_L0
;nRF24L01_lib.c,115 :: 		if (rate==2){NRF_RW(RF_SETUP | W_REGISTER,res | 0b00001000);}        //rate=2Mbps
0x0299	0x082B      	MOVF       FARG_set_data_rate_rate, 0
0x029A	0x3A02      	XORLW      2
0x029B	0x1D03      	BTFSS      STATUS, 2
0x029C	0x2AA4      	GOTO       L_set_data_rate9
0x029D	0x3026      	MOVLW      38
0x029E	0x00B3      	MOVWF      FARG_NRF_RW_command
0x029F	0x3008      	MOVLW      8
0x02A0	0x042C      	IORWF      set_data_rate_res_L0, 0
0x02A1	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x02A2	0x2035      	CALL       _NRF_RW
0x02A3	0x2AAA      	GOTO       L_set_data_rate10
L_set_data_rate9:
;nRF24L01_lib.c,116 :: 		else {NRF_RW(RF_SETUP | W_REGISTER,res & 0b11110111);}        //rate=1Mbps
0x02A4	0x3026      	MOVLW      38
0x02A5	0x00B3      	MOVWF      FARG_NRF_RW_command
0x02A6	0x30F7      	MOVLW      247
0x02A7	0x052C      	ANDWF      set_data_rate_res_L0, 0
0x02A8	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x02A9	0x2035      	CALL       _NRF_RW
L_set_data_rate10:
;nRF24L01_lib.c,118 :: 		}
L_end_set_data_rate:
0x02AA	0x0008      	RETURN
; end of _set_data_rate
_UART1_Write:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,40 :: 		
L_UART1_Write3:
0x02AB	0x1683      	BSF        STATUS, 5
0x02AC	0x1303      	BCF        STATUS, 6
0x02AD	0x1898      	BTFSC      TXSTA, 1
0x02AE	0x2AB1      	GOTO       L_UART1_Write4
;__Lib_UART_c67.c,41 :: 		
0x02AF	0x0000      	NOP
0x02B0	0x2AAB      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,42 :: 		
0x02B1	0x1283      	BCF        STATUS, 5
0x02B2	0x082B      	MOVF       FARG_UART1_Write_data_, 0
0x02B3	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.c,43 :: 		
L_end_UART1_Write:
0x02B4	0x0008      	RETURN
; end of _UART1_Write
_main:
0x02B5	0x243A      	CALL       1082
;nrf_pc.c,56 :: 		void main() {
;nrf_pc.c,58 :: 		unsigned char * buffer[5]={0};
0x02B6	0x1283      	BCF        STATUS, 5
0x02B7	0x1303      	BCF        STATUS, 6
0x02B8	0x01A6      	CLRF       main_buffer_L0
0x02B9	0x01A7      	CLRF       main_buffer_L0+1
0x02BA	0x01A8      	CLRF       main_buffer_L0+2
0x02BB	0x01A9      	CLRF       main_buffer_L0+3
0x02BC	0x01AA      	CLRF       main_buffer_L0+4
;nrf_pc.c,60 :: 		ADCON1 = 0x04;// digital not analog
0x02BD	0x3004      	MOVLW      4
0x02BE	0x1683      	BSF        STATUS, 5
0x02BF	0x009F      	MOVWF      ADCON1
;nrf_pc.c,61 :: 		CMCON = 7;//comparators off
0x02C0	0x3007      	MOVLW      7
0x02C1	0x009C      	MOVWF      CMCON
;nrf_pc.c,63 :: 		TRISD.RD3=0;//for debugging purposes
0x02C2	0x1188      	BCF        TRISD, 3
;nrf_pc.c,64 :: 		PORTD.RD3=1;
0x02C3	0x1283      	BCF        STATUS, 5
0x02C4	0x1588      	BSF        PORTD, 3
;nrf_pc.c,66 :: 		UART1_init(128000);
0x02C5	0x3003      	MOVLW      3
0x02C6	0x1683      	BSF        STATUS, 5
0x02C7	0x0099      	MOVWF      SPBRG
0x02C8	0x1518      	BSF        TXSTA, 2
0x02C9	0x226B      	CALL       _UART1_Init
;nrf_pc.c,67 :: 		delay_ms(100);
0x02CA	0x3002      	MOVLW      2
0x02CB	0x00FB      	MOVWF      R11
0x02CC	0x3004      	MOVLW      4
0x02CD	0x00FC      	MOVWF      R12
0x02CE	0x30BA      	MOVLW      186
0x02CF	0x00FD      	MOVWF      R13
L_main5:
0x02D0	0x0BFD      	DECFSZ     R13, 1
0x02D1	0x2AD0      	GOTO       L_main5
0x02D2	0x0BFC      	DECFSZ     R12, 1
0x02D3	0x2AD0      	GOTO       L_main5
0x02D4	0x0BFB      	DECFSZ     R11, 1
0x02D5	0x2AD0      	GOTO       L_main5
0x02D6	0x0000      	NOP
;nrf_pc.c,68 :: 		UART1_Write(0xBC);
0x02D7	0x30BC      	MOVLW      188
0x02D8	0x00AB      	MOVWF      FARG_UART1_Write_data_
0x02D9	0x22AB      	CALL       _UART1_Write
;nrf_pc.c,69 :: 		UART1_Write(0xCB);
0x02DA	0x30CB      	MOVLW      203
0x02DB	0x00AB      	MOVWF      FARG_UART1_Write_data_
0x02DC	0x22AB      	CALL       _UART1_Write
;nrf_pc.c,71 :: 		while(1){
L_main6:
;nrf_pc.c,72 :: 		command=my_UART1_Read();
0x02DD	0x211D      	CALL       _my_UART1_Read
0x02DE	0x0870      	MOVF       R0, 0
0x02DF	0x00A3      	MOVWF      main_command_L0
;nrf_pc.c,73 :: 		switch (command){
0x02E0	0x2BB9      	GOTO       L_main8
;nrf_pc.c,75 :: 		case '1':arg1=my_UART1_Read();
L_main10:
0x02E1	0x211D      	CALL       _my_UART1_Read
0x02E2	0x0870      	MOVF       R0, 0
0x02E3	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,76 :: 		SPI1_Write(arg1);
0x02E4	0x0870      	MOVF       R0, 0
0x02E5	0x00B5      	MOVWF      FARG_SPI1_Write_data_
0x02E6	0x2010      	CALL       _SPI1_Write
;nrf_pc.c,77 :: 		break;
0x02E7	0x2C2D      	GOTO       L_main9
;nrf_pc.c,78 :: 		case '2':arg1=my_UART1_Read();
L_main11:
0x02E8	0x211D      	CALL       _my_UART1_Read
0x02E9	0x0870      	MOVF       R0, 0
0x02EA	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,79 :: 		res=SPI1_Read(arg1);
0x02EB	0x0870      	MOVF       R0, 0
0x02EC	0x00B5      	MOVWF      FARG_SPI1_Read_buffer
0x02ED	0x2003      	CALL       _SPI1_Read
;nrf_pc.c,80 :: 		UART1_Write(res);
0x02EE	0x0870      	MOVF       R0, 0
0x02EF	0x00AB      	MOVWF      FARG_UART1_Write_data_
0x02F0	0x22AB      	CALL       _UART1_Write
;nrf_pc.c,81 :: 		break;
0x02F1	0x2C2D      	GOTO       L_main9
;nrf_pc.c,82 :: 		case '3':CE_PIN=0;
L_main12:
0x02F2	0x1107      	BCF        RC2_bit, BitPos(RC2_bit+0)
;nrf_pc.c,83 :: 		break;
0x02F3	0x2C2D      	GOTO       L_main9
;nrf_pc.c,84 :: 		case '4':CE_PIN=1;
L_main13:
0x02F4	0x1507      	BSF        RC2_bit, BitPos(RC2_bit+0)
;nrf_pc.c,85 :: 		break;
0x02F5	0x2C2D      	GOTO       L_main9
;nrf_pc.c,86 :: 		case '5':toggle();
L_main14:
0x02F6	0x201D      	CALL       _toggle
;nrf_pc.c,87 :: 		break;
0x02F7	0x2C2D      	GOTO       L_main9
;nrf_pc.c,88 :: 		case '6':toggle_CSN();
L_main15:
0x02F8	0x20AC      	CALL       _toggle_CSN
;nrf_pc.c,89 :: 		break;
0x02F9	0x2C2D      	GOTO       L_main9
;nrf_pc.c,91 :: 		case 'a':init_spi();        //init_spi
L_main16:
0x02FA	0x2085      	CALL       _init_spi
;nrf_pc.c,92 :: 		break;
0x02FB	0x2C2D      	GOTO       L_main9
;nrf_pc.c,93 :: 		case 'b':res=get_STATUS();  //get_STATUS
L_main17:
0x02FC	0x220C      	CALL       _get_STATUS
;nrf_pc.c,94 :: 		UART1_Write(res);
0x02FD	0x0870      	MOVF       R0, 0
0x02FE	0x00AB      	MOVWF      FARG_UART1_Write_data_
0x02FF	0x22AB      	CALL       _UART1_Write
;nrf_pc.c,95 :: 		break;
0x0300	0x2C2D      	GOTO       L_main9
;nrf_pc.c,96 :: 		case 'c':arg1=my_UART1_Read(); //NRF_RW
L_main18:
0x0301	0x211D      	CALL       _my_UART1_Read
0x0302	0x0870      	MOVF       R0, 0
0x0303	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,97 :: 		arg2=my_UART1_Read();
0x0304	0x211D      	CALL       _my_UART1_Read
0x0305	0x0870      	MOVF       R0, 0
0x0306	0x00A5      	MOVWF      main_arg2_L0
;nrf_pc.c,98 :: 		res=NRF_RW(arg1,arg2);
0x0307	0x0824      	MOVF       main_arg1_L0, 0
0x0308	0x00B3      	MOVWF      FARG_NRF_RW_command
0x0309	0x0870      	MOVF       R0, 0
0x030A	0x00B4      	MOVWF      FARG_NRF_RW_dat
0x030B	0x2035      	CALL       _NRF_RW
;nrf_pc.c,99 :: 		CE_PIN=1;
0x030C	0x1507      	BSF        RC2_bit, BitPos(RC2_bit+0)
;nrf_pc.c,100 :: 		UART1_Write(res);
0x030D	0x0870      	MOVF       R0, 0
0x030E	0x00AB      	MOVWF      FARG_UART1_Write_data_
0x030F	0x22AB      	CALL       _UART1_Write
;nrf_pc.c,101 :: 		break;
0x0310	0x2C2D      	GOTO       L_main9
;nrf_pc.c,102 :: 		case 'd':arg1=my_UART1_Read(); //power_mode
L_main19:
0x0311	0x211D      	CALL       _my_UART1_Read
0x0312	0x0870      	MOVF       R0, 0
0x0313	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,103 :: 		power_mode(arg1);
0x0314	0x0870      	MOVF       R0, 0
0x0315	0x00AF      	MOVWF      FARG_power_mode_down
0x0316	0x20FF      	CALL       _power_mode
;nrf_pc.c,104 :: 		break;
0x0317	0x2C2D      	GOTO       L_main9
;nrf_pc.c,105 :: 		case 'e':arg1=my_UART1_Read(); //set data rate
L_main20:
0x0318	0x211D      	CALL       _my_UART1_Read
0x0319	0x0870      	MOVF       R0, 0
0x031A	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,106 :: 		set_data_rate(arg1);
0x031B	0x0870      	MOVF       R0, 0
0x031C	0x00AB      	MOVWF      FARG_set_data_rate_rate
0x031D	0x2290      	CALL       _set_data_rate
;nrf_pc.c,107 :: 		break;
0x031E	0x2C2D      	GOTO       L_main9
;nrf_pc.c,108 :: 		case 'f':arg1=my_UART1_Read(); //set channel
L_main21:
0x031F	0x211D      	CALL       _my_UART1_Read
0x0320	0x0870      	MOVF       R0, 0
0x0321	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,109 :: 		set_RF_CH(arg1);
0x0322	0x0870      	MOVF       R0, 0
0x0323	0x00AB      	MOVWF      FARG_set_RF_CH_ch
0x0324	0x2211      	CALL       _set_RF_CH
;nrf_pc.c,110 :: 		break;
0x0325	0x2C2D      	GOTO       L_main9
;nrf_pc.c,111 :: 		case 'g':arg1=my_UART1_Read();
L_main22:
0x0326	0x211D      	CALL       _my_UART1_Read
0x0327	0x0870      	MOVF       R0, 0
0x0328	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,112 :: 		CRC_config(arg1);
0x0329	0x0870      	MOVF       R0, 0
0x032A	0x00AB      	MOVWF      FARG_CRC_config_crc
0x032B	0x2248      	CALL       _CRC_config
;nrf_pc.c,113 :: 		break;
0x032C	0x2C2D      	GOTO       L_main9
;nrf_pc.c,114 :: 		case 'h':arg1=my_UART1_Read();
L_main23:
0x032D	0x211D      	CALL       _my_UART1_Read
0x032E	0x0870      	MOVF       R0, 0
0x032F	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,115 :: 		enable_dynamic_payload(arg1);
0x0330	0x0870      	MOVF       R0, 0
0x0331	0x00AF      	MOVWF      FARG_enable_dynamic_payload_pipe
0x0332	0x20C3      	CALL       _enable_dynamic_payload
;nrf_pc.c,116 :: 		break;
0x0333	0x2C2D      	GOTO       L_main9
;nrf_pc.c,117 :: 		case 'i':arg1=my_UART1_Read();
L_main24:
0x0334	0x211D      	CALL       _my_UART1_Read
0x0335	0x0870      	MOVF       R0, 0
0x0336	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,118 :: 		set_address_width(arg1);
0x0337	0x0870      	MOVF       R0, 0
0x0338	0x00AB      	MOVWF      FARG_set_address_width_width
0x0339	0x2262      	CALL       _set_address_width
;nrf_pc.c,119 :: 		break;
0x033A	0x2C2D      	GOTO       L_main9
;nrf_pc.c,120 :: 		case 'j':arg1=my_UART1_Read();
L_main25:
0x033B	0x211D      	CALL       _my_UART1_Read
0x033C	0x0870      	MOVF       R0, 0
0x033D	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,121 :: 		arg2=my_UART1_Read();
0x033E	0x211D      	CALL       _my_UART1_Read
0x033F	0x0870      	MOVF       R0, 0
0x0340	0x00A5      	MOVWF      main_arg2_L0
;nrf_pc.c,122 :: 		my_UART1_Read_buffer(buffer,arg2);
0x0341	0x3026      	MOVLW      main_buffer_L0
0x0342	0x00AB      	MOVWF      FARG_my_UART1_Read_buffer_buffer
0x0343	0x0870      	MOVF       R0, 0
0x0344	0x00AC      	MOVWF      FARG_my_UART1_Read_buffer_dat_width
0x0345	0x221D      	CALL       _my_UART1_Read_buffer
;nrf_pc.c,123 :: 		set_pipe_address(arg1,arg2,buffer);
0x0346	0x0824      	MOVF       main_arg1_L0, 0
0x0347	0x00AB      	MOVWF      FARG_set_pipe_address_pipe
0x0348	0x0825      	MOVF       main_arg2_L0, 0
0x0349	0x00AC      	MOVWF      FARG_set_pipe_address_width
0x034A	0x3026      	MOVLW      main_buffer_L0
0x034B	0x00AD      	MOVWF      FARG_set_pipe_address_address
0x034C	0x21B1      	CALL       _set_pipe_address
;nrf_pc.c,124 :: 		break;
0x034D	0x2C2D      	GOTO       L_main9
;nrf_pc.c,125 :: 		case 'k':RX_mode();
L_main26:
0x034E	0x2097      	CALL       _RX_mode
;nrf_pc.c,126 :: 		break;
0x034F	0x2C2D      	GOTO       L_main9
;nrf_pc.c,127 :: 		case 'l':arg1=my_UART1_Read();
L_main27:
0x0350	0x211D      	CALL       _my_UART1_Read
0x0351	0x0870      	MOVF       R0, 0
0x0352	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,128 :: 		RX_LNA_gain(arg1);
0x0353	0x0870      	MOVF       R0, 0
0x0354	0x00AB      	MOVWF      FARG_RX_LNA_gain_gain
0x0355	0x219C      	CALL       _RX_LNA_gain
;nrf_pc.c,129 :: 		break;
0x0356	0x2C2D      	GOTO       L_main9
;nrf_pc.c,130 :: 		case 'm':arg1=my_UART1_Read();
L_main28:
0x0357	0x211D      	CALL       _my_UART1_Read
0x0358	0x0870      	MOVF       R0, 0
0x0359	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,131 :: 		arg2=my_UART1_Read();
0x035A	0x211D      	CALL       _my_UART1_Read
0x035B	0x0870      	MOVF       R0, 0
0x035C	0x00A5      	MOVWF      main_arg2_L0
;nrf_pc.c,132 :: 		my_UART1_Read_buffer(buffer,arg2);
0x035D	0x3026      	MOVLW      main_buffer_L0
0x035E	0x00AB      	MOVWF      FARG_my_UART1_Read_buffer_buffer
0x035F	0x0870      	MOVF       R0, 0
0x0360	0x00AC      	MOVWF      FARG_my_UART1_Read_buffer_dat_width
0x0361	0x221D      	CALL       _my_UART1_Read_buffer
;nrf_pc.c,133 :: 		RX_ack_with_payload(arg1,arg2,buffer);
0x0362	0x0824      	MOVF       main_arg1_L0, 0
0x0363	0x00AB      	MOVWF      FARG_RX_ack_with_payload_pipe
0x0364	0x0825      	MOVF       main_arg2_L0, 0
0x0365	0x00AC      	MOVWF      FARG_RX_ack_with_payload_dat_width
0x0366	0x3026      	MOVLW      main_buffer_L0
0x0367	0x00AD      	MOVWF      FARG_RX_ack_with_payload_dat
0x0368	0x216D      	CALL       _RX_ack_with_payload
;nrf_pc.c,134 :: 		break;
0x0369	0x2C2D      	GOTO       L_main9
;nrf_pc.c,135 :: 		case 'n':arg1=my_UART1_Read();
L_main29:
0x036A	0x211D      	CALL       _my_UART1_Read
0x036B	0x0870      	MOVF       R0, 0
0x036C	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,136 :: 		arg2=my_UART1_Read();
0x036D	0x211D      	CALL       _my_UART1_Read
0x036E	0x0870      	MOVF       R0, 0
0x036F	0x00A5      	MOVWF      main_arg2_L0
;nrf_pc.c,137 :: 		RX_set_static_payload(arg1,arg2);
0x0370	0x0824      	MOVF       main_arg1_L0, 0
0x0371	0x00AF      	MOVWF      FARG_RX_set_static_payload_reg
0x0372	0x0870      	MOVF       R0, 0
0x0373	0x00B0      	MOVWF      FARG_RX_set_static_payload_length
0x0374	0x208E      	CALL       _RX_set_static_payload
;nrf_pc.c,138 :: 		break;
0x0375	0x2C2D      	GOTO       L_main9
;nrf_pc.c,139 :: 		case 'o':TX_mode();
L_main30:
0x0376	0x2124      	CALL       _TX_mode
;nrf_pc.c,140 :: 		break;
0x0377	0x2C2D      	GOTO       L_main9
;nrf_pc.c,141 :: 		case 'p':arg1=my_UART1_Read();
L_main31:
0x0378	0x211D      	CALL       _my_UART1_Read
0x0379	0x0870      	MOVF       R0, 0
0x037A	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,142 :: 		my_UART1_Read_buffer(buffer,arg1);
0x037B	0x3026      	MOVLW      main_buffer_L0
0x037C	0x00AB      	MOVWF      FARG_my_UART1_Read_buffer_buffer
0x037D	0x0870      	MOVF       R0, 0
0x037E	0x00AC      	MOVWF      FARG_my_UART1_Read_buffer_dat_width
0x037F	0x221D      	CALL       _my_UART1_Read_buffer
;nrf_pc.c,143 :: 		TX_write_buffer(arg1,buffer);
0x0380	0x0824      	MOVF       main_arg1_L0, 0
0x0381	0x00AF      	MOVWF      FARG_TX_write_buffer_dat_width
0x0382	0x3026      	MOVLW      main_buffer_L0
0x0383	0x00B0      	MOVWF      FARG_TX_write_buffer_dat
0x0384	0x20EC      	CALL       _TX_write_buffer
;nrf_pc.c,144 :: 		break;
0x0385	0x2C2D      	GOTO       L_main9
;nrf_pc.c,145 :: 		case 'q':arg1=my_UART1_Read();
L_main32:
0x0386	0x211D      	CALL       _my_UART1_Read
0x0387	0x0870      	MOVF       R0, 0
0x0388	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,146 :: 		arg2=my_UART1_Read();
0x0389	0x211D      	CALL       _my_UART1_Read
0x038A	0x0870      	MOVF       R0, 0
0x038B	0x00A5      	MOVWF      main_arg2_L0
;nrf_pc.c,147 :: 		TX_auto_retransmit(arg1,arg2);
0x038C	0x0824      	MOVF       main_arg1_L0, 0
0x038D	0x00AB      	MOVWF      FARG_TX_auto_retransmit_delay
0x038E	0x0870      	MOVF       R0, 0
0x038F	0x00AC      	MOVWF      FARG_TX_auto_retransmit_count
0x0390	0x227B      	CALL       _TX_auto_retransmit
;nrf_pc.c,148 :: 		break;
0x0391	0x2C2D      	GOTO       L_main9
;nrf_pc.c,149 :: 		case 'r':arg1=my_UART1_Read();
L_main33:
0x0392	0x211D      	CALL       _my_UART1_Read
0x0393	0x0870      	MOVF       R0, 0
0x0394	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,150 :: 		TX_disable_auto_ack(arg1);
0x0395	0x0870      	MOVF       R0, 0
0x0396	0x00AB      	MOVWF      FARG_TX_disable_auto_ack_pipe
0x0397	0x21F2      	CALL       _TX_disable_auto_ack
;nrf_pc.c,151 :: 		break;
0x0398	0x2C2D      	GOTO       L_main9
;nrf_pc.c,152 :: 		case 's':arg1=my_UART1_Read();
L_main34:
0x0399	0x211D      	CALL       _my_UART1_Read
0x039A	0x0870      	MOVF       R0, 0
0x039B	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,153 :: 		TX_enable_auto_ack(arg1);
0x039C	0x0870      	MOVF       R0, 0
0x039D	0x00AB      	MOVWF      FARG_TX_enable_auto_ack_pipe
0x039E	0x222F      	CALL       _TX_enable_auto_ack
;nrf_pc.c,154 :: 		break;
0x039F	0x2C2D      	GOTO       L_main9
;nrf_pc.c,155 :: 		case 't':arg1=my_UART1_Read();
L_main35:
0x03A0	0x211D      	CALL       _my_UART1_Read
0x03A1	0x0870      	MOVF       R0, 0
0x03A2	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,156 :: 		my_UART1_Read_buffer(buffer,arg1);
0x03A3	0x3026      	MOVLW      main_buffer_L0
0x03A4	0x00AB      	MOVWF      FARG_my_UART1_Read_buffer_buffer
0x03A5	0x0870      	MOVF       R0, 0
0x03A6	0x00AC      	MOVWF      FARG_my_UART1_Read_buffer_dat_width
0x03A7	0x221D      	CALL       _my_UART1_Read_buffer
;nrf_pc.c,157 :: 		TX_set_address(arg1,buffer);
0x03A8	0x0824      	MOVF       main_arg1_L0, 0
0x03A9	0x00AB      	MOVWF      FARG_TX_set_address_addr_width
0x03AA	0x3026      	MOVLW      main_buffer_L0
0x03AB	0x00AC      	MOVWF      FARG_TX_set_address_addr
0x03AC	0x2139      	CALL       _TX_set_address
;nrf_pc.c,158 :: 		break;
0x03AD	0x2C2D      	GOTO       L_main9
;nrf_pc.c,159 :: 		case 'u':arg1=my_UART1_Read();
L_main36:
0x03AE	0x211D      	CALL       _my_UART1_Read
0x03AF	0x0870      	MOVF       R0, 0
0x03B0	0x00A4      	MOVWF      main_arg1_L0
;nrf_pc.c,160 :: 		TX_output_power_control(arg1);
0x03B1	0x0870      	MOVF       R0, 0
0x03B2	0x00AB      	MOVWF      FARG_TX_output_power_control_pwr
0x03B3	0x2153      	CALL       _TX_output_power_control
;nrf_pc.c,161 :: 		break;
0x03B4	0x2C2D      	GOTO       L_main9
;nrf_pc.c,162 :: 		case 'v':rx_start_simple();
L_main37:
0x03B5	0x2190      	CALL       _rx_start_simple
;nrf_pc.c,163 :: 		break;
0x03B6	0x2C2D      	GOTO       L_main9
;nrf_pc.c,164 :: 		case 'w':tx_start_simple();
L_main38:
0x03B7	0x21E2      	CALL       _tx_start_simple
;nrf_pc.c,165 :: 		break;
0x03B8	0x2C2D      	GOTO       L_main9
;nrf_pc.c,166 :: 		}
L_main8:
0x03B9	0x0823      	MOVF       main_command_L0, 0
0x03BA	0x3A31      	XORLW      49
0x03BB	0x1903      	BTFSC      STATUS, 2
0x03BC	0x2AE1      	GOTO       L_main10
0x03BD	0x0823      	MOVF       main_command_L0, 0
0x03BE	0x3A32      	XORLW      50
0x03BF	0x1903      	BTFSC      STATUS, 2
0x03C0	0x2AE8      	GOTO       L_main11
0x03C1	0x0823      	MOVF       main_command_L0, 0
0x03C2	0x3A33      	XORLW      51
0x03C3	0x1903      	BTFSC      STATUS, 2
0x03C4	0x2AF2      	GOTO       L_main12
0x03C5	0x0823      	MOVF       main_command_L0, 0
0x03C6	0x3A34      	XORLW      52
0x03C7	0x1903      	BTFSC      STATUS, 2
0x03C8	0x2AF4      	GOTO       L_main13
0x03C9	0x0823      	MOVF       main_command_L0, 0
0x03CA	0x3A35      	XORLW      53
0x03CB	0x1903      	BTFSC      STATUS, 2
0x03CC	0x2AF6      	GOTO       L_main14
0x03CD	0x0823      	MOVF       main_command_L0, 0
0x03CE	0x3A36      	XORLW      54
0x03CF	0x1903      	BTFSC      STATUS, 2
0x03D0	0x2AF8      	GOTO       L_main15
0x03D1	0x0823      	MOVF       main_command_L0, 0
0x03D2	0x3A61      	XORLW      97
0x03D3	0x1903      	BTFSC      STATUS, 2
0x03D4	0x2AFA      	GOTO       L_main16
0x03D5	0x0823      	MOVF       main_command_L0, 0
0x03D6	0x3A62      	XORLW      98
0x03D7	0x1903      	BTFSC      STATUS, 2
0x03D8	0x2AFC      	GOTO       L_main17
0x03D9	0x0823      	MOVF       main_command_L0, 0
0x03DA	0x3A63      	XORLW      99
0x03DB	0x1903      	BTFSC      STATUS, 2
0x03DC	0x2B01      	GOTO       L_main18
0x03DD	0x0823      	MOVF       main_command_L0, 0
0x03DE	0x3A64      	XORLW      100
0x03DF	0x1903      	BTFSC      STATUS, 2
0x03E0	0x2B11      	GOTO       L_main19
0x03E1	0x0823      	MOVF       main_command_L0, 0
0x03E2	0x3A65      	XORLW      101
0x03E3	0x1903      	BTFSC      STATUS, 2
0x03E4	0x2B18      	GOTO       L_main20
0x03E5	0x0823      	MOVF       main_command_L0, 0
0x03E6	0x3A66      	XORLW      102
0x03E7	0x1903      	BTFSC      STATUS, 2
0x03E8	0x2B1F      	GOTO       L_main21
0x03E9	0x0823      	MOVF       main_command_L0, 0
0x03EA	0x3A67      	XORLW      103
0x03EB	0x1903      	BTFSC      STATUS, 2
0x03EC	0x2B26      	GOTO       L_main22
0x03ED	0x0823      	MOVF       main_command_L0, 0
0x03EE	0x3A68      	XORLW      104
0x03EF	0x1903      	BTFSC      STATUS, 2
0x03F0	0x2B2D      	GOTO       L_main23
0x03F1	0x0823      	MOVF       main_command_L0, 0
0x03F2	0x3A69      	XORLW      105
0x03F3	0x1903      	BTFSC      STATUS, 2
0x03F4	0x2B34      	GOTO       L_main24
0x03F5	0x0823      	MOVF       main_command_L0, 0
0x03F6	0x3A6A      	XORLW      106
0x03F7	0x1903      	BTFSC      STATUS, 2
0x03F8	0x2B3B      	GOTO       L_main25
0x03F9	0x0823      	MOVF       main_command_L0, 0
0x03FA	0x3A6B      	XORLW      107
0x03FB	0x1903      	BTFSC      STATUS, 2
0x03FC	0x2B4E      	GOTO       L_main26
0x03FD	0x0823      	MOVF       main_command_L0, 0
0x03FE	0x3A6C      	XORLW      108
0x03FF	0x1903      	BTFSC      STATUS, 2
0x0400	0x2B50      	GOTO       L_main27
0x0401	0x0823      	MOVF       main_command_L0, 0
0x0402	0x3A6D      	XORLW      109
0x0403	0x1903      	BTFSC      STATUS, 2
0x0404	0x2B57      	GOTO       L_main28
0x0405	0x0823      	MOVF       main_command_L0, 0
0x0406	0x3A6E      	XORLW      110
0x0407	0x1903      	BTFSC      STATUS, 2
0x0408	0x2B6A      	GOTO       L_main29
0x0409	0x0823      	MOVF       main_command_L0, 0
0x040A	0x3A6F      	XORLW      111
0x040B	0x1903      	BTFSC      STATUS, 2
0x040C	0x2B76      	GOTO       L_main30
0x040D	0x0823      	MOVF       main_command_L0, 0
0x040E	0x3A70      	XORLW      112
0x040F	0x1903      	BTFSC      STATUS, 2
0x0410	0x2B78      	GOTO       L_main31
0x0411	0x0823      	MOVF       main_command_L0, 0
0x0412	0x3A71      	XORLW      113
0x0413	0x1903      	BTFSC      STATUS, 2
0x0414	0x2B86      	GOTO       L_main32
0x0415	0x0823      	MOVF       main_command_L0, 0
0x0416	0x3A72      	XORLW      114
0x0417	0x1903      	BTFSC      STATUS, 2
0x0418	0x2B92      	GOTO       L_main33
0x0419	0x0823      	MOVF       main_command_L0, 0
0x041A	0x3A73      	XORLW      115
0x041B	0x1903      	BTFSC      STATUS, 2
0x041C	0x2B99      	GOTO       L_main34
0x041D	0x0823      	MOVF       main_command_L0, 0
0x041E	0x3A74      	XORLW      116
0x041F	0x1903      	BTFSC      STATUS, 2
0x0420	0x2BA0      	GOTO       L_main35
0x0421	0x0823      	MOVF       main_command_L0, 0
0x0422	0x3A75      	XORLW      117
0x0423	0x1903      	BTFSC      STATUS, 2
0x0424	0x2BAE      	GOTO       L_main36
0x0425	0x0823      	MOVF       main_command_L0, 0
0x0426	0x3A76      	XORLW      118
0x0427	0x1903      	BTFSC      STATUS, 2
0x0428	0x2BB5      	GOTO       L_main37
0x0429	0x0823      	MOVF       main_command_L0, 0
0x042A	0x3A77      	XORLW      119
0x042B	0x1903      	BTFSC      STATUS, 2
0x042C	0x2BB7      	GOTO       L_main38
L_main9:
;nrf_pc.c,167 :: 		UART1_Write(command);
0x042D	0x0823      	MOVF       main_command_L0, 0
0x042E	0x00AB      	MOVWF      FARG_UART1_Write_data_
0x042F	0x22AB      	CALL       _UART1_Write
;nrf_pc.c,168 :: 		command=0;
0x0430	0x01A3      	CLRF       main_command_L0
;nrf_pc.c,169 :: 		}
0x0431	0x2ADD      	GOTO       L_main6
;nrf_pc.c,170 :: 		}
L_end_main:
0x0432	0x2C32      	GOTO       $+0
; end of _main
0x043A	0x3020      	MOVLW      32
0x043B	0x0084      	MOVWF      FSR
0x043C	0x3001      	MOVLW      1
0x043D	0x1283      	BCF        STATUS, 5
0x043E	0x1303      	BCF        STATUS, 6
0x043F	0x00F0      	MOVWF      R0
0x0440	0x3038      	MOVLW      56
0x0441	0x00A1      	MOVWF      ___DoICPAddr
0x0442	0x3004      	MOVLW      4
0x0443	0x00A2      	MOVWF      34
0x0444	0x21D6      	CALL       470
0x0445	0x0008      	RETURN
;nRF24L01_lib.c,0 :: ?ICS_MODE
0x0438	0x3444 ;?ICS_MODE+0
; end of ?ICS_MODE
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [13]    _SPI1_Read
0x0010      [13]    _SPI1_Write
0x001D      [24]    _toggle
0x0035      [17]    _NRF_RW
0x0046      [11]    _UART1_Read
0x0051       [7]    _UART1_Data_Ready
0x0058      [13]    _SPI1_Init
0x0065       [7]    _____DoICP
0x006C      [25]    _merge
0x0085       [9]    _init_spi
0x008E       [9]    _RX_set_static_payload
0x0097      [21]    _RX_mode
0x00AC      [23]    _toggle_CSN
0x00C3      [41]    _enable_dynamic_payload
0x00EC      [19]    _TX_write_buffer
0x00FF      [30]    _power_mode
0x011D       [7]    _my_UART1_Read
0x0124      [21]    _TX_mode
0x0139      [26]    _TX_set_address
0x0153      [26]    _TX_output_power_control
0x016D      [35]    _RX_ack_with_payload
0x0190      [12]    _rx_start_simple
0x019C      [21]    _RX_LNA_gain
0x01B1      [37]    _set_pipe_address
0x01D6      [12]    ___CC2DW
0x01E2      [16]    _tx_start_simple
0x01F2      [26]    _TX_disable_auto_ack
0x020C       [5]    _get_STATUS
0x0211      [12]    _set_RF_CH
0x021D      [18]    _my_UART1_Read_buffer
0x022F      [25]    _TX_enable_auto_ack
0x0248      [26]    _CRC_config
0x0262       [9]    _set_address_width
0x026B      [16]    _UART1_Init
0x027B      [21]    _TX_auto_retransmit
0x0290      [27]    _set_data_rate
0x02AB      [10]    _UART1_Write
0x02B5     [381]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0007       [0]    CE_PIN
0x0007       [0]    RC2_bit
0x0007       [0]    CE_PIN
0x0008       [1]    PORTD
0x0009       [0]    CSN_PIN
0x0009       [0]    RE2_bit
0x000A       [1]    PCLATH
0x000C       [1]    PIR1
0x0013       [1]    SSPBUF
0x0014       [1]    SSPCON
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x0020       [1]    _MODE
0x0021       [2]    ___DoICPAddr
0x0023       [1]    main_command_L0
0x0024       [1]    main_arg1_L0
0x0025       [1]    main_arg2_L0
0x0026       [5]    main_buffer_L0
0x002B       [1]    FARG_RX_ack_with_payload_pipe
0x002B       [1]    FARG_CRC_config_crc
0x002B       [1]    FARG_TX_auto_retransmit_delay
0x002B       [1]    FARG_RX_LNA_gain_gain
0x002B       [1]    tx_start_simple_dat_L0
0x002B       [1]    FARG_UART1_Write_data_
0x002B       [1]    FARG_set_data_rate_rate
0x002B       [1]    FARG_set_RF_CH_ch
0x002B       [1]    FARG_TX_output_power_control_pwr
0x002B       [1]    FARG_set_address_width_width
0x002B       [1]    FARG_my_UART1_Read_buffer_buffer
0x002B       [1]    FARG_TX_enable_auto_ack_pipe
0x002B       [1]    FARG_TX_disable_auto_ack_pipe
0x002B       [1]    FARG_TX_set_address_addr_width
0x002B       [1]    FARG_set_pipe_address_pipe
0x002C       [1]    FARG_set_pipe_address_width
0x002C       [1]    FARG_RX_ack_with_payload_dat_width
0x002C       [1]    FARG_TX_set_address_addr
0x002C       [1]    FARG_my_UART1_Read_buffer_dat_width
0x002C       [1]    set_data_rate_res_L0
0x002C       [1]    FARG_TX_auto_retransmit_count
0x002C       [1]    CRC_config_res_L0
0x002D       [1]    my_UART1_Read_buffer_i_L0
0x002D       [1]    TX_set_address_i_L0
0x002D       [1]    FARG_set_pipe_address_address
0x002D       [1]    FARG_RX_ack_with_payload_dat
0x002E       [1]    FLOC__my_UART1_Read_buffer
0x002E       [1]    set_pipe_address_i_L0
0x002E       [1]    RX_ack_with_payload_i_L0
0x002F       [1]    FARG_merge_target
0x002F       [1]    FARG_power_mode_down
0x002F       [1]    FARG_TX_write_buffer_dat_width
0x002F       [1]    FARG_enable_dynamic_payload_pipe
0x002F       [1]    FARG_RX_set_static_payload_reg
0x0030       [1]    FARG_RX_set_static_payload_length
0x0030       [1]    FARG_merge_value
0x0030       [1]    power_mode_res_L0
0x0030       [1]    FARG_TX_write_buffer_dat
0x0031       [1]    FARG_merge_shift
0x0031       [1]    TX_write_buffer_i_L0
0x0032       [1]    FARG_merge_mask
0x0033       [1]    FARG_NRF_RW_command
0x0034       [1]    FARG_NRF_RW_dat
0x0035       [1]    FARG_SPI1_Read_buffer
0x0035       [1]    FARG_SPI1_Write_data_
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0087       [0]    MOSI_Dir
0x0087       [0]    TRISC3_bit
0x0087       [0]    MISO_Dir
0x0087       [0]    CE_Dir
0x0087       [0]    SCLK_Dir
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC2_bit
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC4_bit
0x0087       [0]    TRISC5_bit
0x0088       [1]    TRISD
0x0089       [0]    CSN_Dir
0x0089       [0]    TRISE2_bit
0x0094       [1]    SSPSTAT
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009C       [1]    CMCON
0x009F       [1]    ADCON1
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0438       [1]    ?ICS_MODE
